{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "10370991779270488412"
    }
  },
  "parameters": {
    "companyName": {
      "type": "string",
      "metadata": {
        "description": "Company Name Identifier. (3-5 characters)"
      },
      "maxLength": 5,
      "minLength": 3
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Location / Region for deployment."
      }
    },
    "FileShareName": {
      "type": "string",
      "defaultValue": "aznamingtooldata",
      "metadata": {
        "description": "File Share Folder Name."
      }
    },
    "ResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group Name."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('stor{0}{1}', parameters('companyName'), uniqueString(parameters('ResourceGroupName')))]",
      "metadata": {
        "description": "The name of the Storage Account"
      }
    }
  },
  "variables": {
    "appServicePlanName": "appsvcplan-aznamingtool",
    "webSiteName": "[format('{0}-aznamingtool', parameters('companyName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-01-01",
      "name": "[parameters('ResourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('mod_{0}_manageIdStor', parameters('ResourceGroupName'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "FileShareName": {
            "value": "[parameters('FileShareName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "11915341606082044459"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "FileShareName": {
              "type": "string"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-06-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "accessTier": "Hot",
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('FileShareName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2022-01-31-preview",
              "name": "AzNamingTool",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(resourceGroup().name, 'AzNamingTool')]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'AzNamingTool')).principalId]",
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'AzNamingTool')]"
              ]
            }
          ],
          "outputs": {
            "managedIdentityPrincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', 'AzNamingTool')).principalId]"
            },
            "managedIdentityName": {
              "type": "string",
              "value": "AzNamingTool"
            },
            "storageAccountResID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            },
            "storageAccountAPI": {
              "type": "string",
              "value": "2021-06-01"
            },
            "fileshareinfo": {
              "type": "string",
              "value": "[format('{0}/default/{1}', parameters('storageAccountName'), parameters('FileShareName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('mod_{0}_WebApp', parameters('ResourceGroupName'))]",
      "resourceGroup": "[parameters('ResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlanName": {
            "value": "[variables('appServicePlanName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountResId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('mod_{0}_manageIdStor', parameters('ResourceGroupName')))).outputs.storageAccountResID.value]"
          },
          "storageAccountAPI": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('mod_{0}_manageIdStor', parameters('ResourceGroupName')))).outputs.storageAccountAPI.value]"
          },
          "webSiteName": {
            "value": "[variables('webSiteName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.10.61.36676",
              "templateHash": "17792755002068494409"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageAccountResId": {
              "type": "string"
            },
            "storageAccountAPI": {
              "type": "string"
            },
            "appServicePlanName": {
              "type": "string"
            },
            "webSiteName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[parameters('appServicePlanName')]",
              "location": "[parameters('location')]",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "F1"
              },
              "kind": "linux"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "siteConfig": {
                  "netFrameworkVersion": "v4.0",
                  "linuxFxVersion": "DOTNETCORE|6.0",
                  "ftpsState": "Disabled"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('webSiteName'), 'azurestorageaccounts')]",
              "properties": {
                "aznamingtooldata": {
                  "type": "AzureFiles",
                  "accountName": "[parameters('storageAccountName')]",
                  "shareName": "aznamingtooldata",
                  "mountPath": "/app/settings",
                  "accessKey": "[listKeys(parameters('storageAccountResId'), parameters('storageAccountAPI')).keys[0].value]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('ResourceGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('ResourceGroupName')), 'Microsoft.Resources/deployments', format('mod_{0}_manageIdStor', parameters('ResourceGroupName')))]"
      ]
    }
  ]
}